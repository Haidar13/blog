{
  
    
        "post0": {
            "title": "Architecture Considerations for Cloud Native Applications",
            "content": "There are two main approaches to design and build application which are referred to as Monoliths and microservices. it is very critical to think about the approach to follow before starting the design and the coding process to avoid unnecessary pullbacks. . The context discovery process helps in defining the overall structure and design of the components that can enable adding new features with minimum engineering effort. . discovery process . The main steps in the discovery process are : . 1- list functional requirements (what services should the application deliver) . Who are the stakeholders and what are their needs | What functionalities are required and what are the ones that are nice to have | Who are the end users and how will they interact with the application | What are the Input and output processes in the application | . 2- list all available resource that helps in the implementation . Engineering resources | Financial resources | Time frames | Internal knowledge | . Application tires and their relation to the architecture . Each application consists of 3 main tires: . UI (User Interface) - handles HTTP requests from the users and returns a response | Business logic - contained the code that provides a service to the users | Data layer - implements access and storage of data objects | . When working with a monoliths or microservices approach, the 3 tires are treated differently . Monoliths . In a monolithic architecture, application tiers can be described as: . part of the same unit | managed in a single repository | sharing existing resources (e.g. CPU and memory) | developed in one programming language | released using a single binary | . Microservices . In a microservices architecture, application tiers are managed independently, as different units. Each unit has the following characteristics: . managed in a separate repository | own allocated resources (e.g. CPU and memory) | well-defined API (Application Programming Interface) for connection to other units | implemented using the programming language of choice | released using its own binary | . Choosing and architecture is highly dependent on the functional requirements such as product features dependencies and the available resources es such as the engineering team. . If an organization have large resources and powerful engineering force they can go with micro services but if they have time limits or few resources or small team a monolith approach is usually taken. . Trade-offs for Monoliths and Microservices . There is no right or wrong choice it all depends on the trade-offs associated with with each architecture in terms of development complexity, scalability, time to deploy, flexibility, operational cost, and reliability . Development Complexity . Development complexity represents the effort required to deploy and manage an application. . Monoliths - one programming language; one repository; enables sequential development . Microservice - multiple programming languages; multiple repositories; enables concurrent development . Scalability . Scalability captures how an application is able to scales up and down, based on the incoming traffic. . Monoliths - replication of the entire stack; hence it’s heavy on resource consumption . Microservice - replication of a single unit, providing on-demand consumption of resources . Time to Deploy . Time to deploy encapsulates the build of a delivery pipeline that is used to ship features. . Monoliths - one delivery pipeline that deploys the entire stack; more risk with each deployment leading to a lower velocity rate . Microservice - multiple delivery pipelines that deploy separate units; less risk with each deployment leading to a higher feature development rate . Flexibility . Flexibility implies the ability to adapt to new technologies and introduce new functionalities. . Monoliths - low rate, since the entire application stack might need restructuring to incorporate new functionalities . Microservice - high rate, since changing an independent unit is straightforward . Operational Cost . Operational cost represents the cost of necessary resources to release a product. . Monoliths - low initial cost, since one code base and one pipeline should be managed. However, the cost increases exponentially when the application needs to operate at scale. . Microservice - high initial cost, since multiple repositories and pipelines require management. However, at scale, the cost remains proportional to the consumed resources at that point in time. . Reliability . Reliability captures practices for an application to recover from failure and tools to monitor an application. . Monoliths - in a failure scenario, the entire stack needs to be recovered. Also, the visibility into each functionality is low, since all the logs and metrics are aggregated together. . Microservice - in a failure scenario, only the failed unit needs to be recovered. Also, there is high visibility into the logs and metrics for each unit. . Best Practices For Application Deployment . There are basic best practices when it comes to deploying an application regardless if it is a monoliths or microservices application. These practices help in improving the lifecycle of the application and make it easier to maintain and improve upon later. Here is the list of best practices: . 1- Health Checks: it showcase the status of an application. These checks report if an application is running and meets the expected behavior to serve incoming traffic . 2- Metrics: Statistics to quantify the performance of the application such as as number of active users, number of requests per seconds, longest/average response time for a request, resources (CPU, RAM …) utilization etc. . 3- Logs: provides valuable insights into what operations a service is performing at a point in time which can have multiple levels (DEBUG, INFO, WARN, ERROR, FATAL) . 4- Tracing: creating a full picture of how different services are invoked to fulfill a single request . 5- Resource Consumption: encapsulates the resources an application requires to be fully operational such as CPU, RAM, Network throughput etc. . Amorphous Applications . Applications are in a constant state of change and during the lifecycle of an application it might have operations applied to it during application maintenance such as . Split: when a functionality is too big or complex and it needs to be split into smaller units. | Merge: when a unit is very granular or apply only to handful of cases it might be good to merge it with another unit. | replace: sometimes a junctional is replaced entirely by a new process or written in a new framework or programing language to address issues such as performance or maintainability or extensibility. | Stale: when a functionality or unit is no longer needed by the business or the application it is retired. | .",
            "url": "https://haidar13.github.io/scnf/2021/06/22/CNF-lesson02-arch-consideration.html",
            "relUrl": "/scnf/2021/06/22/CNF-lesson02-arch-consideration.html",
            "date": " • Jun 22, 2021"
        }
        
    
  
    
        ,"post1": {
            "title": "Installing cloud native tools in windows 10 using chocolatey package manager",
            "content": "I am taking a Udaciy course for cloud native fundamentals and in the first lesson you need to install the following tools before continuing . Python | Git | Docker | Vagrant | VirtualBox | . I am using Windows 10 machine and there is a package manager called chocolatey (similar to apt and dnf in some linux distros) which I have been using for a while now. . To use it you need to run powershell as administrator (press WIN+S keys and search for powershell then run as administrator) . . If this is the first time using chocolatey you need to install it first . Copy the following code (from chocolatey website) . Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString(&#39;https://chocolatey.org/install.ps1&#39;)) . And past it into the PowerShell terminal then hit Enter . Note: the main command to run is . iex ((New-Object System.Net.WebClient).DownloadString(&#39;https://chocolatey.org/install.ps1&#39;)) . which will Invoke-Expression in the install.ps1 file after downloading it. the rest of the command is set the security policy for powershell to allow the downloaded powershell script to be executed. . After installing chocolatey, you can install all the requirements with this command . choco install python git docker-desktop vagrant virtualbox . You can also use choco upgrade PKG-NAME to upgrade a package. . You might also need to change the default WSL version to version 2 by issuing this command . wsl --set-default-version 2 . Another important thing, you need to check that virtualization is enabled from the BIOS/UEFI settings (this will depend on your computer model, you can search in your preferred search engine how to do this) . I use conda to manage my python environments, so I did not install python using chocolatey. I just started by installing the tools if I face something in the upcoming lessons I will update this post .",
            "url": "https://haidar13.github.io/scnf/2021/06/13/Installing-CloudNative-tools-WIN10.html",
            "relUrl": "/scnf/2021/06/13/Installing-CloudNative-tools-WIN10.html",
            "date": " • Jun 13, 2021"
        }
        
    
  
    
        ,"post2": {
            "title": "Fastai lesson 01 Questionnaire",
            "content": "1- Do you need these for deep learning? . Do you need? T/F . Lots of math | T / F | . Lots of data | T / F | . Lots of expensive computers | T / F | . A PhD | T / F | . 2- Name five areas where deep learning is now the best in the world. . Computer vision | Medicine | Biology | Natural Language processing | Recommender systems | . 3- What was the name of the first device that was based on the principle of the artificial neuron? . The Mark I Perceptron. . 4- Based on the book of the same name, what are the requirements for parallel distributed processing (PDP)? . The PDP has 8 requirements: . A set of processing units | A state of activation | An output function for each of the units | A pattern of connectivity between the units | A propagation rule to propagate the activities patterns through the network connections | An activation rule to combine the inputs in the unit with the current state of the unit to produce an output | A learning rule to modify the patterns of connectivity based on experience | An environment for the system to operate. | . 5- What were the two theoretical misunderstandings that held back the field of neural networks? . The first issue is that a single layer cannot represent some functions like XOR but adding a second layer will help, people only consider the first half of this statement. . The second issue: In theory adding a second layer can approximate any mathematical function but in practice they are too big and too slow to train. . 6- What is a GPU? . It is a specialized processing unit that was intended to process and display images and videos then later it was repurposed to perform neural network computation because it handles multiple tasks in parallel which is present in most of the neural network operation . 7- Open a notebook and execute a cell containing: 1+1. What happens? . The output 2 is printed in an output cell . 8- Follow through each cell of the stripped version of the notebook for this chapter. Before executing each cell, guess what will happen. . Done . 9- Complete the Jupyter Notebook online appendix. . Done . 10- Why is it hard to use a traditional computer program to recognize images in a photo? . You need to manually write a lot of rules that might not be inclusive of all features that can be used to distinguish an image from the other . 11- What did Samuel mean by “weight assignment”? . It means choosing a particular values for the program/model parameters that will improve the results . 12- What term do we normally use in deep learning for what Samuel called “weights”? . The parameters . 13- Draw a picture that summarizes Samuel’s view of a machine learning model. . . 14- Why is it hard to understand why a deep learning model makes a particular prediction? . Because of the large interdependencies between the parameters that lead to a decision which makes it hard to pinpoint a single factor or set of factors that lead to the final decision. . 15- What is the name of the theorem that shows that a neural network can solve any mathematical problem to any level of accuracy? . The universal approximation theorem. . 16- What do you need in order to train a model? . Input data | Labels (can be annotated by humans or automatically generated from the data for example with auto-encoders) | Loss function that can be used to compare the labels and the model output and how similar they are | A method to update the weights or parameter values; the most commonly used method is back-propagation. | . 17- How could a feedback loop impact the rollout of a predictive policing model? . The bias and prejudice of the data and the way models are designed will produced biased output and it will be accurate with regards to the input biased data; when the model is deployed, it will reinforce the bias in the communities used to produce the initial data. The updated data according to the system output if used to update the model will still be biased. . 18- Do we always have to use 224×224-pixel images with the cat recognition model? . No, the early models used this aspect ratio and it stuck with many pre-trained models. Depending in the the type of layer between the last convolution/polling layer of the network and the fully connected layers it might be possible to use a different image size even if the model was trained with 224x224 image size. . 19- What is the difference between classification and regression? . In classification the final output or label is discrete (categorical) whereas the regression output is continuos. . 20- What is a validation set? What is a test set? Why do we need them? . Validation set is typically used to fine tune the hyper-parameters of the model; i.e. change the way we train the model or the size of the model then train on the training set the preform a test on the validation set after finishing the training we select the model based on the best performance on the validation set. The test set is not touched during the training or fine-tuning, it is only used after finalizing the model to check how it might perform on real world in unseen data. . 21- What will fastai do if you don’t provide a validation set? . Fastai will split the data randomly into 80% training and 20% testing subsets . 22- Can we always use a random sample for a validation set? Why or why not? . No, for example if we have time series or time dependent data we cannot randomly select data from the middle of the series . 23- What is overfitting? Provide an example. . Overfitting occurs when the model memorizes the training data and does not generalize to unseen data. for example a voice to text model that can only transcribe a voice that has been used in the training and any slight modification to the voice can cripple the system. . 24- What is a metric? How does it differ from “loss”? . The loss is used to adjust the model parameters and it measure how close the training labels to the predicted labels. The metric on the other hand, is related to the problem that we are trying to solve for example in classification problem it can be the accuracy or F1 score, in segmentation it can be dice or intersection over union score, for regression problem we can use the mean square error . 25- How can pretrained models help? . Pre-trained models learn the low level features that are common in many tasks this can help is in fine-tuning the models by updating the parameters used for the high-level features at hand which can reduce the training time and the amount of data needed . 26- What is the “head” of a model? . The head of the model is the last couple of layers of a neural network that are usually trained during fine-tuning . 27- What kinds of features do the early layers of a CNN find? How about the later layers? . Early layers find low level features such as lines and edges. Later layers try to find high level features like eyes and mouth in case of face detection. . 28- Are image models only useful for photos? . No, it can be used in other modalities for example 1D sound signal can be converted into 2D spectrogram then used as input to image models. . 29- What is an “architecture”? . It is the number of layers, the type of layers, the order of the layers, and the interconnection between them. . 30- What is segmentation? . Assigning a class to each pixel in the image, each class can represent a type of object. . 31- What is y_range used for? When do we need it? . It is used to scale the output of the network sigmoid layer . 32- What are “hyperparameters”? . They are parameters the are typically used during the training of the model to control how the model is being trained but not used in the final trained model for inference. . 33- What’s the best way to avoid failures when using AI in an organization? . First make sure the problem at hand is clearly defined and that it needs AI and the upper management support the project, then collect a valid dataset for training. After collecting the dataset try different models and ways of addressing the problem and split your data into training/validation/testing to make sure the model is robust. After deploying the model make sure to update it regularly to avoid the data distribution shift and the organizational priorities and operations shift. .",
            "url": "https://haidar13.github.io/fastai/2021/05/30/fastai-qudai-lesson-01.html",
            "relUrl": "/fastai/2021/05/30/fastai-qudai-lesson-01.html",
            "date": " • May 30, 2021"
        }
        
    
  
    
  
    
  
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "My name is Haidar Almubarak, I’m interested in applied computer vision and machine learning. . Trying to learn a new thing everyday. .",
          "url": "https://haidar13.github.io/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://haidar13.github.io/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}